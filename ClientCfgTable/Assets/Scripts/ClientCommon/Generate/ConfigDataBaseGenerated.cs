using System.Collections.Generic;

namespace ClientCommon
{
    public partial class ConfigDataBase
    {
        public static AbilityConfig AbilityConfig { get { return Instance.GetConfiguration<AbilityConfig>(); } }
        public static ActivityAwardConfig ActivityAwardConfig { get { return Instance.GetConfiguration<ActivityAwardConfig>(); } }
        public static AlertMessageConfig AlertMessageConfig { get { return Instance.GetConfiguration<AlertMessageConfig>(); } }
        public static LeagueBossConfig LeagueBossConfig { get { return Instance.GetConfiguration<LeagueBossConfig>(); } }
        public static DattributeConfig DattributeConfig { get { return Instance.GetConfiguration<DattributeConfig>(); } }

        public static Dictionary<string, string> dbNameDic = new Dictionary<string, string>()
        {
            {"activity_award", "activity_award_db"},
            {"acupoint", "acupoint_db"},
            {"alert_message", "alert_message_db"},
            {"animation_info", "animation_info_db"},
            {"area_mine", "area_mine_db"},
            {"attribute_definition", "attribute_definition_db"},
            {"avatar_create", "avatar_create_db"},
            {"barrage_content", "barrage_content_db"},
            {"buy_times", "buy_times_db"},
            {"channel", "channel_db"},
            {"content_ban_word", "content_ban_word_db"},
            {"daily_benefit", "daily_benefit_db"},
            {"daily_mission", "daily_mission_db"},
            {"dart_random_event", "dart_random_event_db"},
            {"dart_system", "dart_system_db"},
            {"dress", "dress_db"},
            {"dummy", "dummy_db"},
            {"dummy_group", "dummy_group_db"},
            {"dungeon", "dungeon_db"},
            {"editor_ability", "editor_ability_db"},
            {"editor_ability_sub_ability_component", "editor_ability_db"},
            {"editor_ability_sub_ability_parameter", "editor_ability_db"},
            {"editor_ai_data_group", "editor_ai_data_group_db"},
            {"editor_ai_job", "editor_ai_job_db"},
            {"editor_ai_trigger", "editor_ai_trigger_db"},
            {"editor_editor_data", "editor_editor_data_db"},
            {"editor_effect", "editor_effect_db"},
            {"editor_effect_sub_effect_component", "editor_effect_db"},
            {"editor_effect_generator", "editor_effect_generator_db"},
            {"editor_effect_generator_sub_effect_generator_entry", "editor_effect_generator_db"},
            {"editor_scene_config", "editor_scene_config_db"},
            {"effect_class", "effect_class_db"},
            {"email", "email_db"},
            {"emoji", "emoji_db"},
            {"equipment", "equipment_db"},
            {"equipment_random_attribute", "equipment_random_attribute_db"},
            {"equipment_refine", "equipment_refine_db"},
            {"exchange", "exchange_db"},
            {"exclusive_skill", "exclusive_skill_db"},
            {"faction", "faction_db"},
            {"faction_tree_build", "faction_tree_build_db"},
            {"faction_tree_level", "faction_tree_level_db"},
            {"faction_tree_mission", "faction_tree_mission_db"},
            {"fix_reward", "fix_reward_db"},
            {"flow_message_act", "flow_message_act_db"},
            {"friend_assistance", "friend_assistance_db"},
            {"friend_ship", "friend_ship_db"},
            {"gag_ban_word", "gag_ban_word_db"},
            {"gift", "gift_db"},
            {"gm_activity_mission", "gm_activity_mission_db"},
            {"gm_activity_mission_block", "gm_activity_mission_block_db"},
            {"gm_board_announcement", "gm_board_announcement_db"},
            {"gm_const_activity_mission", "gm_const_activity_mission_db"},
            {"gm_cycle_task", "gm_cycle_task_db"},
            {"gm_fix_reward", "gm_fix_reward_db"},
            {"gm_full_sign_reward", "gm_full_sign_reward_db"},
            {"gm_random_reward", "gm_random_reward_db"},
            {"gm_version", "gm_version_db"},
            {"goods", "goods_db"},
            {"growth_fund_mission", "growth_fund_mission_db"},
            {"guide_child", "guide_child_db"},
            {"guide_parent", "guide_parent_db"},
            {"heartcheats", "heartcheats_db"},
            {"heartpower", "heartpower_db"},
            {"heartstar", "heartstar_db"},
            {"hero_ref", "hero_ref_db"},
            {"item", "item_db"},
            {"jewel", "jewel_db"},
            {"league_attribution", "league_attribution_db"},
            {"league_boss", "league_boss_db"},
            {"league_boss_dungeon", "league_boss_dungeon_db"},
            {"loading_tips_config", "loading_tips_config_db"},
            {"menu_navigation", "menu_navigation_db"},
            {"mesh_assembly", "mesh_assembly_db"},
            {"mirror_arena", "mirror_arena_db"},
            {"mission", "mission_db"},
            {"mission_block", "mission_block_db"},
            {"model", "model_db"},
            {"monster_ref", "monster_ref_db"},
            {"monthcard", "monthcard_db"},
            {"multi_dungeon", "multi_dungeon_db"},
            {"new1v1_level_range", "new1v1_level_range_db"},
            {"new1v1_reward", "new1v1_reward_db"},
            {"npc", "npc_db"},
            {"object_state", "object_state_db"},
            {"onevsone_arena_grade", "onevsone_arena_grade_db"},
            {"onevsone_arena_rank_reward", "onevsone_arena_rank_reward_db"},
            {"online_reward", "online_reward_db"},
            {"program_animation", "program_animation_db"},
            {"program_animation_sub_animation_event_config", "program_animation_db"},
            {"program_asset_path", "program_asset_path_db"},
            {"program_client_config", "program_client_config_db"},
            {"program_game_config", "program_game_config_db"},
            {"program_object_template", "program_object_template_db"},
            {"program_object_template_sub_component", "program_object_template_db"},
            {"push_notification", "push_notification_db"},
            {"random_mission", "random_mission_db"},
            {"random_reward", "random_reward_db"},
            {"rank", "rank_db"},
            {"rank_award", "rank_award_db"},
            {"realm", "realm_db"},
            {"red_packets", "red_packets_db"},
            {"role_exp", "role_exp_db"},
            {"role_matrix_centre", "role_matrix_centre_db"},
            {"role_name", "role_name_db"},
            {"role_ref", "role_ref_db"},
            {"scene_effect", "scene_effect_db"},
            {"sign_multi_condition", "sign_multi_condition_db"},
            {"sign_reward", "sign_reward_db"},
            {"signal_guard_tower", "signal_guard_tower_db"},
            {"skill", "skill_db"},
            {"skill_cheats", "skill_cheats_db"},
            {"skill_group", "skill_group_db"},
            {"suits", "suits_db"},
            {"system_help", "system_help_db"},
            {"system_service", "system_service_db"},
            {"target_filter_group", "target_filter_group_db"},
            {"text_config", "text_config_db"},
            {"time_limit_dungeon", "time_limit_dungeon_db"},
            {"time_limit_item", "time_limit_item_db"},
            {"title", "title_db"},
            {"title_stage", "title_stage_db"},
            {"total_login_day", "total_login_day_db"},
            {"trade", "trade_db"},
            {"trade_group", "trade_group_db"},
            {"treasure", "treasure_db"},
            {"treasure_reel", "treasure_reel_db"},
            {"trial", "trial_db"},
            {"tutor", "tutor_db"},
            {"ui_pannel", "ui_pannel_db"},
            {"version", "version_db"},
            {"vip", "vip_db"},
            {"world_boss", "world_boss_db"},
            {"world_boss_award", "world_boss_award_db"},
            {"world_boss_profit", "world_boss_profit_db"},
            {"zone", "zone_db"},
            {"zone_perfect_pass_condition", "zone_perfect_pass_condition_db"},
            {"zone_reward", "zone_reward_db"},
            {"dattribute", "dattribute_db"},
            {"monster", "monster_db"},
            {"monster_self_adaption", "monster_self_adaption_db"},
            {"sale_group", "sale_group_db"},
            {"const_value", "const_value_db"},
        };

        public void RegisterEnumerationType(CustomDbClass customDbClass)
        {
            customDbClass.RegisterTypeParser(typeof(LywColor), LywColor.Parse);
            customDbClass.RegisterTypeParser(typeof(LywVector2), LywVector2.Parse);
            customDbClass.RegisterTypeParser(typeof(LywVector3), LywVector3.Parse);
            customDbClass.RegisterTypeParser(typeof(LywRect), LywRect.Parse);

            AttributeType.Initialize();
            customDbClass.RegisterTypeParser(typeof(AttributeType), AttributeType.GetTypeByName);
            customDbClass.RegisterTextParser(typeof(AttributeType), AttributeType.GetNameByType);
        }

        
    }
}
